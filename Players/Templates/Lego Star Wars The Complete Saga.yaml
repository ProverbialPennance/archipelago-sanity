# Q. What is this file?
# A. This file contains options which allow you to configure your multiworld experience while allowing
#    others to play how they want as well.
#
# Q. How do I use it?
# A. The options in this file are weighted. This means the higher number you assign to a value, the
#    more chances you have for that option to be chosen. For example, an option like this:
#
#    map_shuffle:
#      on: 5
#      off: 15
#
#    Means you have 5 chances for map shuffle to occur, and 15 chances for map shuffle to be turned
#    off.
#
# Q. I've never seen a file like this before. What characters am I allowed to use?
# A. This is a .yaml file. You are allowed to use most characters.
#    To test if your yaml is valid or not, you can use this website:
#        http://www.yamllint.com/
#    You can also verify that your Archipelago options are valid at this site:
#        https://archipelago.gg/check

# Your name in-game, limited to 16 characters.
#     {player} will be replaced with the player's slot number.
#     {PLAYER} will be replaced with the player's slot number, if that slot number is greater than 1.
#     {number} will be replaced with the counter value of the name.
#     {NUMBER} will be replaced with the counter value of the name, if the counter value is greater than 1.
name: Player{number}

# Used to describe your yaml. Useful if you have multiple files.
description: 'Default Lego Star Wars: The Complete Saga Template'

game: 'Lego Star Wars: The Complete Saga'
requires:
  version: 0.6.2 # Version of Archipelago required for this yaml to work as expected.

'Lego Star Wars: The Complete Saga':
  # Game Options
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # 
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # 
    # **Full:** ensure everything can be reached and acquired.
    # 
    # **Minimal:** ensure what is needed to reach your goal can be acquired.
    full: 50
    minimal: 0

  plando_items:
    # Generic items plando.
    []

  minikit_goal_amount:
    # The number of Minikits required to goal.
    # 
    # Each enabled episode chapter shuffles 10 Minikits into the item pool, which may be bundled to reduce the number
    # Minikit items in the item pool.
    # 
    # Setting this option to "use_percentage_option" will use the Minikit Goal Amount Percentage option's value to
    # determine how many Minikit's are required to goal.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 10
    # Maximum value is 360
    random: 0
    random-low: 0
    random-high: 0
    use_percentage_option: 50 # equivalent to -1

  minikit_goal_amount_percentage:
    # The percentage of Minikits in the item pool that are required to goal.
    # 
    # 10 Minikits are added to the item pool for each enabled episode chapter, which may be bundled to reduce the number
    # of individual items.
    # 
    # This does nothing unless the Minikit Goal Amount option is set to "use_percentage_option" instead of a number.
    # 
    # The final number of Minikits required to goal is rounded to the nearest integer, but will always be at least 1.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 100
    75: 50
    random: 0
    random-low: 0
    random-high: 0

  minikit_bundle_size:
    # Minikit items in the item pool are bundled into items individually worth this number of Minikits.
    # 
    # Low bundle sizes can cause generation times to increase and are more likely to result in generation failing with a
    # FillError when generating Lego Star Wars: The Complete Saga on its own, or with other games that can struggle to
    # place all items.
    # 
    # Low bundle sizes also mean fewer filler items in the item pool.
    individual: 0
    '2': 0
    '5': 50
    '10': 0

  enabled_chapters_count:
    # Choose how many randomly picked chapters from Allowed Chapters should be enabled.
    # 
    # If there are fewer allowed chapters than the count to enable, all the allowed chapters will be enabled.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 36
    18: 50
    random: 0
    random-low: 0
    random-high: 0

  allowed_chapters:
    # Choose the chapter levels that are allowed to be picked when randomly choosing which chapters will be enabled.
    # 
    # Individual chapters can be specified, e.g. "1-1", "5-4".
    # 
    # Special values:
    # - "All": All chapters will be allowed.
    # - "Prequel Trilogy": All chapters in episodes 1, 2 and 3 will be allowed.
    # - "Original Trilogy": All chapters in episode 4, 5 and 6 will be allowed.
    # - "Episode {number}": e.g. "Episode 3" will allow all chapters in Episode 3, so 3-1 through to 3-6.
    # 
    # Examples:
    # # Enable only 1-1 (Negotiations)
    # allowed_chapters: ["1-1"]
    # 
    # # Enable only 1-1 (Negotiations) (alt.)
    # allowed_chapters:
    #   - 1-1
    # 
    # # Enable all
    # allowed_chapters: ["All"]
    # 
    # # Enable all (alt.)
    # allowed_chapters:
    #   - All
    # 
    # # Enable only vehicle levels
    # allowed_chapters:
    #   - 1-4
    #   - 2-2
    #   - 2-5
    #   - 3-1
    #   - 4-6
    #   - 5-1
    #   - 5-3
    #   - 6-6
    # 
    # # A mix of values
    # allowed_chapters:
    #   - Prequel Trilogy
    #   - Episode 4
    #   - 5-2
    #   - 5-3
    #   - 6-5
    ['All']

  allowed_chapter_types:
    # Specify additional filtering of the allowed chapters that can be enabled.
    # 
    # - All: No additional filtering, all chapters specified in the Allowed Chapters option are allowed.
    # - No Vehicles: No vehicle chapters (1-4, 2-1, 2-5, 3-1, 4-6, 5-1, 5-3, 6-6) will be allowed.
    all: 50
    no_vehicles: 0

  starting_chapter:
    # Choose the starting chapter. The Episode the starting level belongs to will be accessible from the start.
    # 
    # Known issues:
    # - If the starting chapter belongs to an Episode other than Episode 1, when starting a new save file and connecting
    # to the Archipelago server, the starting Episode door will appear locked (red light), but this is only visual.
    # - If the starting chapter belongs to an Episode other than Episode 1, when starting a new save file and connecting
    # to the Archipelago server, the Episode 1 door will be open, but it will correctly lock itself upon re-entering the
    # main room of the Cantina.
    # - Due to the way the logic currently assumes the player has access to a Jedi and a Protocol Droid, if access to the
    # chosen starting chapter does not include a Jedi and Protocol Droid in its requirements, a Jedi character and/or
    # TC-14 will be added to the starting inventory.
    # 
    # Due to the character requirements being shared between some levels, some starting levels will result in additional
    # levels being open from the start:
    # 
    # Starting with 1-1 will also open 1-6.
    # Starting with 1-2 will also open 1-6.
    # Starting with 1-3 will also open 1-6.
    # Starting with 1-5 will also open 1-6.
    # Starting with 3-2 will also open 3-6.
    # Starting with 4-3 will also open 4-2.
    1-1: 50
    1-2: 0
    1-3: 0
    1-4: 0
    1-5: 0
    1-6: 0
    2-1: 0
    2-2: 0
    2-3: 0
    2-4: 0
    2-5: 0
    2-6: 0
    3-1: 0
    3-2: 0
    3-3: 0
    3-4: 0
    3-5: 0
    3-6: 0
    4-1: 0
    4-2: 0
    4-3: 0
    4-4: 0
    4-5: 0
    4-6: 0
    5-1: 0
    5-2: 0
    5-3: 0
    5-4: 0
    5-5: 0
    5-6: 0
    6-1: 0
    6-2: 0
    6-3: 0
    6-4: 0
    6-5: 0
    6-6: 0
    random_chapter: 0
    random_non_vehicle: 0
    random_vehicle: 0
    random_episode_1: 0
    random_episode_2: 0
    random_episode_3: 0
    random_episode_4: 0
    random_episode_5: 0
    random_episode_6: 0

  preferred_chapters:
    # When the generator picks which chapters should be enabled, it will pick from these preferred chapters first.
    # 
    # If a preferred chapter is not allowed to be picked because it is not included in the Allowed Chapters option, it
    # will not be picked.
    # 
    # This option can be used to guarantee that certain chapters are present in a generated world.
    # 
    # Individual chapters can be specified, e.g. "1-1", "5-4".
    # 
    # Special values:
    # - "Prequel Trilogy": All chapters in episodes 1, 2 and 3 will be preferred.
    # - "Original Trilogy": All chapters in episode 4, 5 and 6 will be preferred.
    # - "Episode {number}": e.g. "Episode 3" will make all chapters in Episode 3, so 3-1 through to 3-6, be preferred.
    # 
    # Examples:
    # # Prefer 1-1 (Negotiations)
    # preferred_chapters: ["1-1"]
    # 
    # # Prefer 1-1 (Negotiations) (alt.)
    # preferred_chapters:
    #   - 1-1
    # 
    # # Prefer vehicle levels
    # preferred_chapters:
    #   - 1-4
    #   - 2-2
    #   - 2-5
    #   - 3-1
    #   - 4-6
    #   - 5-1
    #   - 5-3
    #   - 6-6
    # 
    # # A mix of values
    # preferred_chapters:
    #   - Prequel Trilogy
    #   - Episode 4
    #   - 5-2
    #   - 5-3
    #   - 6-5
    []

  prefer_entire_episodes:
    # When enabled, after the generator has picked a chapter to be enabled out of the allowed chapters, it will continue
    # picking additional chapters from the same episode until it runs out of allowed chapters in that episode.
    # 
    # For example, if the generator picks 3-2 as the first enabled chapter, its next picked chapters will be guaranteed to
    # be picked from the allowed chapters out of 3-1, 3-3, 3-4, 3-5 and 3-6.
    # 
    # The Starting Chapter is always the first picked enabled chapter.
    # 
    # With all chapters allowed to be enabled and an Enabled Chapters Count set to a multiple of 6, this option will
    # result in whole episodes being enabled.
    # 
    # When combined with the Preferred Chapters option, this option can be used to guarantee entire episodes.
    'false': 50
    'true': 0

  enable_story_character_unlock_locations:
    # Enable locations for unlocking Story mode characters that would normally unlock when completing a Chapter in
    # vanilla.
    # 
    # In vanilla, completing any Chapter with C-3PO as a playable Story mode character would unlock C-3PO. In vanilla,
    # this would mean completing either 2-3, 4-1, 5-2 or 6-1 because Chapters within an Episode unlock in order in
    # vanilla, but the AP randomizer allows for Chapters to be unlocked out-of-order, so, additionally, completing any of
    # 4-2, 4-3, 4-4, 4-5, 5-6, 6-2 or 6-4, would also send the Story Character Unlock location for C-3PO.
    # 
    # The first Chapter completed that would unlock a Story mode character will send the Unlock location for that
    # character.
    # 
    # Because Story mode is skipped in the AP randomizer, these character unlock locations are sent when the Chapters are
    # completed in Free Play.
    # 
    # With all Chapters enabled, this adds 56 locations.
    'false': 0
    'true': 50

  enable_bonus_locations:
    # The Bonuses Door in the Cantina has a number of levels that require Gold Bricks to access. When this option is
    # enabled, completing each of these Bonus levels (in Story Mode if they have a Story mode) will be a location to
    # check.
    # 
    # Additionally, watching the Lego Indiana Jones trailer (it can be skipped once started), and purchasing Indiana Jones
    # from the shop are added as locations to check.
    # 
    # Gold Brick logic currently only counts Gold Bricks earned from Chapter completion, True Jedi, 10/10 Minikits in a
    # Chapter, and the singular Gold Bricks awarded for completing other Bonus levels.
    # 
    # Depending on other options, not all Chapters could be enabled, so if there are not enough Gold Bricks logically
    # available for a Bonus level to be accessed, that Bonus level will not be included in the multiworld.
    # 
    # With all Chapters enabled, this adds 8 locations.
    'false': 50
    'true': 0

  enable_all_episodes_purchases:
    # Enable the expensive character purchase locations for IG-88, Dengar, 4-LOM, Ben Kenobi (Ghost), Anakin Skywalker
    # (Ghost), Yoda (Ghost) and R2-Q5.
    # 
    # In vanilla, these locations unlock after completing Story mode for every chapter, but the AP randomizer changes
    # these shop purchases to unlock according to the All Episodes Character Purchase Requirements option.
    # 
    # Even when the locations are disabled, the vanilla characters, IG-88, Dengar etc. may still be added to the item
    # pool.
    # 
    # Attempting to purchase the vanilla characters from the shop while the locations are disabled will not unlock the
    # vanilla characters.
    # 
    # This adds 7 locations.
    'false': 50
    'true': 0

  episode_unlock_requirement:
    # Choose how Episodes are unlocked.
    # 
    # The Episode of your starting Chapter will always be unlocked from the start.
    # 
    # - Open: All Episodes will be unlocked from the start.
    # - Episode Item: Each Episode will unlock after receiving an unlock item for that Episode, e.g. "Episode 5 Unlock".
    open: 50
    episode_item: 0

  most_expensive_purchase_with_no_multiplier:
    # The most expensive individual purchase the player can be expected to make without any score multipliers, *in
    # thousands of Studs*.
    # 
    # For example, an option value of 100 means that purchases up to 100,000 studs in price can be expected to be
    # purchased without any score multipliers.
    # 
    # The logical requirements for expensive purchases will scale with this value. For example, if a purchase of up to
    # 100,000 Studs is expected with no score multipliers, then a purchase of 100,001 up to 200,000 Studs is expected with
    # a score multiplier of 2x.
    # 
    # "Score x2" costs 1.25 million studs (1250 * 1000) in vanilla, so, for a more vanilla experience with potentially
    # more farming for Studs, set this option to 1250.
    # 
    # The most expensive purchase is "Score x10", which costs 20 million studs (20000 * 1000). Setting this options to
    # 20000 means that all purchases are logically expected without score multipliers.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 6
    # Maximum value is 20000
    100: 50
    random: 0
    random-low: 0
    random-high: 0

  all_episodes_character_purchase_requirements:
    # The vanilla unlock requirements for purchasing IG-88, Dengar, 4-LOM, Ben Kenobi (Ghost), Anakin Skywalker
    # (Ghost), Yoda (Ghost) and R2-Q5 from the shop, are completing every Story mode chapter. The randomizer changes this
    # unlock condition because completing every Story mode chapter is unreasonable in most multiworlds and is impossible
    # if not all chapters are enabled.
    # 
    # - Episodes Unlocked: The shop purchases will unlock when the "Episode # Unlock" item for each Episode with enabled
    # Chapters has been received. If the Episode Unlock Requirement is set to Open or there is only 1 enabled Episode,
    # this will be forcefully changed to "Episodes Tokens" instead.
    # - Episodes Tokens: A number of "All Episodes Token" items will be added to the item pool, equal to the number of
    # enabled Episodes. All of these "All Episodes Token" items will need to be received to unlock the characters for
    # purchase.
    episodes_unlocked: 0
    episodes_tokens: 50

  preferred_characters:
    # Specify characters that the generator should try to always include in the item pool.
    # 
    # When the number of enabled Chapters is reduced from the maximum, the number of items to add to the item pool is also
    # reduced, so not all characters may get added to the item pool.
    # 
    # The names of all items can be found by starting the Lego Star Wars: The Complete Saga client and entering the
    # `/items` command.
    # 
    # If no vehicle Chapters are enabled, no vehicle characters will be included in the item pool.
    ['Yoda (Ghost)', 'Droideka', 'General Grievous']

  preferred_extras:
    # Specify Extras that the generator should try to always include in the item pool.
    # 
    # When the number of enabled Chapters is reduced from the maximum, the number of items to add to the item pool is also
    # reduced, so not all Extras may get added to the item pool.
    # 
    # The names of all items can be found by starting the Lego Star Wars: The Complete Saga client and entering the
    # `/items` command.
    # 
    # Score Multipliers that are logically required, due to the Most Expensive Purchase With No Score Multiplier option,
    # will always be included in the item pool.
    # 
    # When Progressive Score Multiplier items are enabled (always enabled currently), preferring "Score x{number}" to be
    # included in the item pool will try to ensure there are enough Progressive Score Multiplier items to unlock that
    # score multiplier.
    ['Exploding Blaster Bolts', 'Infinite Torpedos', 'Invincibility', 'Score x2', 'Score x10', 'Super Ewok Catapult', 'Fast Build', 'Stud Magnet', 'Disarm Troopers', 'Self Destruct', 'Deflect Bolts', 'Force Grapple Leap', 'Score x6', 'Score x4', 'Fast Force', 'Score x8', 'Dark Side']

  start_with_detectors:
    # Start with the Minikit Detector and Power Brick Detector unlocked.
    # 
    # When these Extras are enabled, the locations of Minikits and Power Bricks in the current level are shown with
    # arrows.
    'false': 0
    'true': 50

  filler_weight_characters:
    # This option controls the weight of characters when choosing which items to fill out the rest of the space in the
    # item pool. A higher weight in comparison to the other Filler Weight options results in more characters in the item
    # pool, compared to other items used to fill out the rest of the item pool.
    # 
    # The generator tries to fill the item pool with as many Characters and Extras as would be unlocked, in vanilla, by
    # all the enabled locations.
    # 
    # Archipelago locations that don't have a corresponding vanilla item, and Minikits being bundled, results in some free
    # space in the item pool for any kind of item.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    40: 50
    random: 0
    random-low: 0
    random-high: 0

  filler_weight_extras:
    # This option controls the weight of Extras when choosing which items to fill out the rest of the space in the
    # item pool. A higher weight in comparison to the other Filler Weight options results in more Extras in the item
    # pool, compared to other items used to fill out the rest of the item pool.
    # 
    # The generator tries to fill the item pool with as many Characters and Extras as would be unlocked, in vanilla, by
    # all the enabled locations.
    # 
    # Archipelago locations that don't have a corresponding vanilla item, and Minikits being bundled, results in some free
    # space in the item pool for any kind of item.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    30: 50
    random: 0
    random-low: 0
    random-high: 0

  filler_weight_junk:
    # This option controls the weight of Studs, Power Ups and other junk filler Archipelago items when choosing which
    # items to fill out the rest of the space in the item pool. A higher weight in comparison to the other Filler Weight
    # options results in more Studs and other filler Archipelago items in the item pool, compared to other items used to
    # fill out the rest of the item pool.
    # 
    # Purple Stud is currently the only junk filler Archipelago item that is implemented, but more will likely be added in
    # the future.
    # 
    # The generator tries to fill the item pool with as many Characters and Extras as would be unlocked, in vanilla, by
    # all the enabled locations.
    # 
    # Archipelago locations that don't have a corresponding vanilla item, and Minikits being bundled, results in some free
    # space in the item pool for any kind of item.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    30: 50
    random: 0
    random-low: 0
    random-high: 0

  received_item_messages:
    # Determines whether an in-game notification is displayed when receiving an item.
    # 
    # Note: Dying while a message is displayed results in losing studs as normal, but the lost studs do not drop, so
    # cannot be recovered.
    # Note: Collecting studs while a message is displayed plays the audio for collecting Blue/Purple studs, but this has
    # no effect on the received value of the studs collected.
    # 
    # - All: Every item shows a message
    # - None: All items are received silently.
    all: 50
    none: 0

  checked_location_messages:
    # Determines whether an in-game notification is displayed when checking a location.
    # 
    # Note: Dying while a message is displayed results in losing studs as normal, but the lost studs do not drop, so
    # cannot be recovered.
    # Note: Collecting studs while a message is displayed plays the audio for collecting Blue/Purple studs, but this has
    # no effect on the received value of the studs collected.
    # 
    # - All: Every checked location shows a message
    # - None: No checked locations show a message
    all: 50
    none: 0

  # Item & Location Options
  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_inventory_from_pool:
    # Start with these items and don't place them in the world.
    # 
    # The game decides what the replacement items will be.
    {}

  start_hints:
    # Start with these item's locations prefilled into the ``!hint`` command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the ``!hint`` command.
    []

  exclude_locations:
    # Prevent these locations from having an important item.
    []

  priority_locations:
    # Prevent these locations from having an unimportant item.
    []

  item_links:
    # Share part of your item pool with other players.
    []
